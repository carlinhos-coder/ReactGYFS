{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,2BAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAOtB,ECNwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAIZ,CAACtB,IAEGuB,EDf2BM,CAAa7B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAGtB,OACI,qCACI,6BAAKtB,IACJsB,GAAW,+CACZ,qBAAKJ,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEnBxBmB,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,UAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,gCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCX7BgC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d6da36ae.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2) {\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qWbQDzPF825r2NC1U42CdAgPWnBSdiwu`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gift = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url//interrogacion es para saber si las trae\r\n        }\r\n    })\r\n    return gift;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__backInLeft\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    /*  const [images, setImages] = useState([])\r\n      useEffect(() => {\r\n          getGifs(category)\r\n          .then(setImages);\r\n      }, [category])*/\r\n    const { data: images, loading } = useFetchGifs(category);\r\n    //console.log(state);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Cargando Gifts</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n\r\n\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Bikes'])\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}